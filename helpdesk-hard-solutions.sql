/*
SQLZoo Helpdesk Hard Solutions
*/

--#11
/*
Show the manager and number of calls received for each hour of the day on 2017-08-12
*/
SELECT m.staff_code as Manager, LEFT(call_date,13) AS Hr, COUNT(*) AS cc
FROM Shift 
  JOIN Staff m ON m.staff_code=Shift.manager
  JOIN Staff o ON o.staff_code=Shift.operator
  JOIN Issue ON Issue.taken_by=o.staff_code
GROUP BY 1,2
HAVING LEFT(Hr,10)='2017-08-12'
ORDER BY 2

--#12
/*
80/20 rule. It is said that 80% of the calls are generated by 20% of the callers. 
Is this true? 
What percentage of calls are generated by the most active 20% of callers.
*/
SET @row_number=0;
SELECT 
  SUM(IF(num <= (SELECT 0.2*COUNT(DISTINCT caller_id) FROM Issue), num_calls,0))*100.0/SUM(num_calls) t20pc
FROM (
  SELECT (@row_number:=@row_number+1) as num, caller_id, num_calls 
    FROM (
      SELECT caller_id, COUNT(caller_id) num_calls
      FROM Issue
      GROUP BY 1
      ORDER BY 2 DESC 
    ) a 
  ORDER BY 3 DESC 
) b

--#13
/*
Annoying customers. Customers who call in the last five minutes of a shift are annoying. 
Find the most active customer who has never been annoying.
*/
SELECT company_name, COUNT(*) abna
FROM Customer 
  JOIN Caller ON Caller.company_ref=Customer.company_ref
  JOIN Issue ON Caller.caller_id = Issue.caller_id
GROUP BY 1
HAVING MAX(IF(LEFT(RIGHT(call_date, 8),5) IN ('13:55','13:56','13:57','13:58','13:59','19:55','19:56','19:57','19:58','19:59'), 1, 0)) = 0
ORDER BY 2 DESC
LIMIT 1

--#14
/* Maximal usage. If every caller registered with a customer makes a call in one day then that customer has "maximal usage" of the service. 
   List the maximal customers for 2017-08-13.
*/
SELECT company_name, COUNT(Caller.caller_id) AS caller_count, COUNT(i.caller_id) AS issue_count
FROM Customer
  JOIN Caller ON Customer.company_ref=Caller.company_ref
  LEFT JOIN (SELECT caller_id FROM Issue WHERE LEFT(call_date,10)='2017-08-13') i ON Caller.caller_id=i.caller_id
GROUP BY 1
HAVING MAX(IF(i.caller_id IS NULL, 1,0))=0
ORDER BY 1;
              
--#15
/*
Consecutive calls occur when an operator deals with two callers within 10 minutes. 
Find the longest sequence of consecutive calls â€“ give the name of the operator and the first and last call date in the sequence.
*/
/*6:42*/
SET @counter=0;
SET @current_op='Nobody';
SET @previous_date='2017-08-13 00:00:00';
SET @start_date='2000-08-13 00:00:00';

SELECT taken_by, first_call, last_call, calls
FROM (
  SELECT taken_by, 
    call_date, 
    @current_op,
    @counter,
    TIMEDIFF(@previous_date, call_date-INTERVAL 10 MINUTE) AS timedif,
      IF(TIMEDIFF(@previous_date, call_date-INTERVAL 10 MINUTE)>=0
          && @current_op=taken_by, 
        IF((@previous_date:=call_date)&&(@counter:=@counter+1),@counter,-1),
        IF((@counter:=1)&&(@start_date:=call_date)&&(@previous_date:=call_date)&& (@current_op:=Issue.taken_by), @counter, -2)) AS calls,
    @start_date AS first_call,
    @previous_date AS last_call
  FROM Issue
  ORDER BY 1,2
) a
ORDER BY 4 DESC
LIMIT 1
              
